{"version":3,"sources":["components/Home.js","components/Login.js","components/BusinessFunctions.js","components/AddLocation.js","components/Reviews.js","components/Search.js","components/MyYelp.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","loginCheck","setState","loggedIn","state","username","userna","location","this","user","to","onClick","React","Component","Login","onSubmit","event","trim","length","authenticated","preventDefault","onChange","value","target","name","from","pathname","type","businesses","BusinessFunctions","findbusinesses","input","city","filter","contains","expected","search","toLowerCase","includes","addbusiness","business","open","id","push","updatebusiness","deleteLocation","addreview","review","reviews","allbusinesses","findid","AddLocation","complete","newBusiness","address","updated","updatedbusiness","console","log","placeholder","Reviews","inputTXT","updateReview","addReview","getAttribute","ids","locations","map","reviewHolder","i","b","concat","r","Search","showbusiness","delete","forceUpdate","findCity","findState","display","openBusinesses","locationList","href","App","basename","process","exact","path","render","MyYelp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a6fa233.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {loggedIn: false, username: \"\"}\r\n    }\r\n    \r\n    loginCheck = () =>{\r\n       this.setState({loggedIn: true})\r\n    }\r\n\r\n    render(){\r\n    var userna = \"\";\r\n    const location = this.props.location;\r\n    \r\n    if (this.state.username === \"\"){\r\n        if (location && location.state && location.state.user) {\r\n            userna = location.state.user;    \r\n            this.setState({username:userna})\r\n        }\r\n    }\r\n        return (\r\n        <div>\r\n            {this.state.username !== \"\" || this.state.loggedIn === true? \r\n            <div>\r\n            <Link to='/yelp'>Continue To MyNearbyPlaces</Link> { this.state.username }\r\n            </div>\r\n            :<div><Link to='/login' onClick ={() => this.loginCheck()}>Login to Continue</Link></div>}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        if (this.state.username.trim().length > 0) {\r\n            this.setState({ authenticated: true });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    onChange = (event) => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        let from = { pathname: '/', state: { user: this.state.username } };\r\n\r\n        if (this.state.authenticated) {\r\n            return (\r\n                <Redirect to={from} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <lable>Username:</lable>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                    ></input>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","var businesses = []\r\n\r\nconst BusinessFunctions = {\r\n    findbusinesses:(input, city, state) => {\r\n        if (input === null){\r\n            return []\r\n        }\r\n        if (businesses.filter(location => BusinessFunctions.contains(location.name, input) &&\r\n         BusinessFunctions.contains(location.city, city) && BusinessFunctions.contains(location.state, state))){\r\n\r\n            return businesses.filter(location => BusinessFunctions.contains(location.name, input) && \r\n            BusinessFunctions.contains(location.city, city) && BusinessFunctions.contains(location.state, state))\r\n        }\r\n        else{\r\n            return []\r\n        }\r\n    },\r\n    contains: (expected, search) =>{\r\n        return (expected.toLowerCase().includes(search.toLowerCase()))\r\n    },\r\n    addbusiness:(business) => {\r\n        business.open = true\r\n        business.id = businesses.length\r\n        businesses.push(business)\r\n    },\r\n    updatebusiness:(business) => {\r\n        businesses[business.id] = business    \r\n    },\r\n    deleteLocation:(id) => {\r\n        businesses[id].open = false\r\n    },\r\n    addreview:(id, review) => {\r\n        businesses[id].reviews.push(review)\r\n    },\r\n    allbusinesses:() => {\r\n       return businesses \r\n    },\r\n    findid:(id) => {\r\n        return businesses[id]\r\n    }\r\n}\r\n\r\nexport default BusinessFunctions;","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport BusinessFunctions from \"./BusinessFunctions\"\r\n\r\nclass AddLocation extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={name: \"\", address: \"\",city: \"\",state:\"\", complete: false, reviews: []}\r\n\r\n        if (props.updated === \"true\"){\r\n            console.log(props.updated)\r\n            this.state.updated = true\r\n            var id = props.location.state.id\r\n\r\n            this.state.id = BusinessFunctions.allbusinesses()[id].id\r\n            this.state.name = BusinessFunctions.allbusinesses()[id].name\r\n            this.state.address = BusinessFunctions.allbusinesses()[id].address\r\n            this.state.city = BusinessFunctions.allbusinesses()[id].city\r\n            this.state.state = BusinessFunctions.allbusinesses()[id].state\r\n            this.state.open = BusinessFunctions.allbusinesses()[id].open\r\n            this.state.reviews = BusinessFunctions.allbusinesses()[id].reviews\r\n        }\r\n    }\r\n\r\nonSubmit = (event) => {\r\n        this.setState({complete: true})\r\n        var newBusiness = {id : this.state.id,name: this.state.name, open: this.state.open ,\r\n             address: this.state.address,city: this.state.city,state : this.state.state, \r\n             reviews: this.state.reviews}\r\n        if (this.state.updated){\r\n            BusinessFunctions.updatedbusiness(newBusiness)\r\n        }\r\n        else {\r\n            BusinessFunctions.addbusiness(newBusiness)\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\nonChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value });\r\n}\r\n\r\nrender(){\r\n    if (this.state.complete){\r\n        return (\r\n            <Redirect to=\"/yelp\" /> \r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {this.state.updated ? \"update\": \"Add\"}\r\n            <form onSubmit={this.onSubmit}>  \r\n\r\n                <input type=\"text\" name=\"name\" value={this.state.name} placeholder = \"Location Name\"\r\n                 onChange={this.onChange}></input><br/>\r\n            \r\n                <input type=\"text\" name=\"address\" value={this.state.address} placeholder = \"Address\"\r\n                 onChange={this.onChange}></input><br/>\r\n\r\n                <input type=\"text\" name=\"city\" value={this.state.city} placeholder = \"City\"\r\n                 onChange={this.onChange}></input><br/>\r\n\r\n                <input type=\"text\" name=\"state\" value={this.state.state} placeholder = \"State\"\r\n                 onChange={this.onChange}></input><br/>\r\n\r\n                <button type=\"submit\"><b>Save</b></button>\r\n            </form>\r\n    </div>\r\n    )\r\n    \r\n}\r\n}\r\nexport default AddLocation;","import React from 'react';\r\nimport {Link}  from \"react-router-dom\";\r\nimport BusinessFunctions from \"./BusinessFunctions\"\r\n\r\nclass Reviews extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {ids: props.location.state.locations, input: null, inputTXT: \"\" }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        BusinessFunctions.addreview(this.state.input,this.state.inputTXT)\r\n        this.setState({input: null})\r\n    }\r\n\r\n    updateReview = (event) => {\r\n        this.setState({inputTXT: event.target.value})\r\n    }\r\n\r\n    addReview = (event) =>{\r\n        this.setState({input: event.target.getAttribute(\"business\")})\r\n    }\r\n\r\n    render(){\r\n        var locations = this.state.ids.map(BusinessFunctions.findid)\r\n        var reviewHolder =[]\r\n\r\n        for (let i = 0; i < locations.length ; i++){\r\n            const b = locations[i]\r\n            let reviews = []\r\n\r\n            if (b.reviews.length === 0){\r\n                reviews.push(<div><i>There are no reviews yet. Be the first to review!</i></div>)\r\n            }\r\n\r\n            else{ \r\n                reviews.push(<div><b>Reviews for this location</b></div>)\r\n                reviews= reviews.concat(b.reviews.map((r) => <div> \"{r}\" </div>))\r\n            }\r\n            \r\n            reviewHolder.push(<div><b>{b.name}</b> located at <b>{b.address}</b><br/><br/>{reviews}\r\n            <button onClick={this.addReview} business= {b.id}>Add a Review</button></div>)  \r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                {reviewHolder}\r\n                {this.state.input ? <form onSubmit= {this.onSubmit}> <input onChange= {this.updateReview}\r\n                 type = \"text\" placeholder = \"post your review here!\"/> \r\n                <button type =\"submit\"> Post Your Review</button> </form> : \"\" }\r\n                <br/><Link to=\"/yelp\">Return to Search</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reviews;","import React from 'react';\r\nimport {  Link } from \"react-router-dom\";\r\nimport BusinessFunctions from \"./BusinessFunctions\"\r\n\r\n  class Search extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {input: \"\",businesses: [], display: false, city: \"\", state: \"\"}   \r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        this.setState({showbusiness: true}) \r\n        event.preventDefault();\r\n    }\r\n\r\n    delete = (event) => {\r\n        BusinessFunctions.deleteLocation(event.target.getAttribute(\"business\"))\r\n        this.forceUpdate()\r\n    }\r\n\r\n    search = (event) => {\r\n        const input = event.target.value;\r\n        const businesses = BusinessFunctions.findbusinesses(input, this.state.city, this.state.state)\r\n        this.setState({ businesses: businesses,input: input});\r\n    }\r\n\r\n    findCity = (event) => {\r\n        const input = event.target.value;\r\n        this.setState({ city: input,});\r\n    }\r\n\r\n    findState =  (event) => {\r\n        const input = event.target.value;\r\n        this.setState({ state: input,});\r\n    }\r\n  \r\n    render(){\r\n        var openBusinesses = this.state.businesses.filter(b => b.open)\r\n        var locations = openBusinesses.map(b => b.id)\r\n        var locationList= openBusinesses.map((b) => <div>\r\n            {b.name}, {b.address}, {b.city}, {b.state} |\r\n            <Link to={{pathname: \"/update\",state: { id: b.id }}}> Update</Link>\r\n            | <a href=\"#\" onClick={this.delete} business= {b.id}> delete </a>\r\n            |<Link to={{ pathname: \"/business\",state: { locations: locations }}}> Reviews</Link> |\r\n            </div>\r\n        )\r\n\r\n        var notFound = \"\";\r\n        if (locationList.length === 0){\r\n            notFound = \"Results found\";\r\n        }\r\n  \r\n        return(\r\n        <div>\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Please enter a City and State</p>\r\n                <input type=\"text\" value={this.state.findCity} placeholder = \"Enter a City (i.e. Tucson)\"\r\n                 onChange={this.findCity}></input>\r\n\r\n                <input type=\"text\" value={this.state.findState} placeholder = \"Enter a State (i.e. AZ)\"\r\n                 onChange={this.findState} ></input>\r\n                <br/>\r\n\r\n                <p>Enter a location to search for</p>\r\n                <input type=\"text\" value={this.state.input} placeholder = \"Enter a business name here.\"\r\n                 onChange={this.search}\r\n                ></input>         \r\n            </form>\r\n\r\n                {locationList.length === 0 ? \r\n                \"No businesses found yet\" \r\n                :<div><b>{locationList.length} Results Found</b></div>}\r\n                {locationList}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Search;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./Search\"\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {username: \"\"}\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n        <div>\r\n            <div>\r\n            <Link to='/add'>Add Location</Link>\r\n            <Search/>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport AddLocation from './components/AddLocation';\nimport Reviews from './components/Reviews';\nimport Search from './components/Search';\nimport MyYelp from './components/MyYelp';\nimport './App.css';\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path='/' render={props => <Home {...props} />}>\n        </Route>\n        <Route path='/login' >\n          <Login />\n        </Route>\n        <Route path='/add' render={props => <AddLocation {...props} />}>\n        </Route>\n        <Route path='/update' render={props => <AddLocation updated = \"true\" {...props} />}>\n        </Route>\n        <Route exact path='/business' render={props => <Reviews {...props} />}>\n        </Route>\n        <Route path='/search' >\n          <Search />\n        </Route>\n        <Route path='/yelp' >\n          <MyYelp />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}